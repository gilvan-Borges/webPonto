{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/style/IconImageCache.js", "../../../../../../node_modules/ol/style/IconImage.js", "../../../../../../node_modules/ol/style/Image.js"],
  "sourcesContent": ["/**\r\n * @module ol/style/IconImageCache\r\n */\nimport ImageState from '../ImageState.js';\nimport { asArray } from '../color.js';\nimport { getSharedCanvasContext2D } from '../dom.js';\n\n/**\r\n * @classdesc\r\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\r\n */\nclass IconImageCache {\n  constructor() {\n    /**\r\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\r\n     * @private\r\n     */\n    this.cache_ = {};\n\n    /**\r\n     * @type {!Object<string, CanvasPattern>}\r\n     * @private\r\n     */\n    this.patternCache_ = {};\n\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\n    this.cacheSize_ = 0;\n\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   * @return {import(\"./IconImage.js\").default} Icon image.\r\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   * @return {CanvasPattern} Icon image.\r\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\r\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\r\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(iconImage.getImage(1), 'repeat');\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(iconImage.getImage(1), 'repeat');\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\r\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\r\n   * your map uses more than 1024 different icon images and you are not caching icon\r\n   * styles on the application level.\r\n   * @param {number} maxCacheSize Cache max size.\r\n   * @api\r\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\r\n * @param {string} src Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../color.js\").Color|string|null} color Color.\r\n * @return {string} Cache key.\r\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n\n/**\r\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\r\n * {@link module:ol/style/Icon~Icon} images.\r\n * @api\r\n */\nexport const shared = new IconImageCache();", "/**\r\n * @module ol/style/IconImage\r\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { decodeFallback } from '../Image.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\n\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\nlet taintedTestContext = null;\nclass IconImage extends EventTarget {\n  /**\r\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\r\n   * @param {string|undefined} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\r\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\r\n     */\n    this.image_ = image;\n\n    /**\r\n     * @private\r\n     * @type {string|null}\r\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\r\n     * @private\r\n     * @type {Object<number, HTMLCanvasElement>}\r\n     */\n    this.canvas_ = {};\n\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|string|null}\r\n     */\n    this.color_ = color;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size|null}\r\n     */\n    this.size_ = image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\n    this.src_ = src;\n\n    /**\r\n     * @private\r\n     */\n    this.tainted_;\n\n    /**\r\n     * @private\r\n     * @type {Promise<void>|null}\r\n     */\n    this.ready_ = null;\n  }\n\n  /**\r\n   * @private\r\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\r\n   * @private\r\n   * @return {boolean} The image canvas is tainted.\r\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\r\n   * @private\r\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\r\n   * @private\r\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\r\n   * @private\r\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\r\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Image or Canvas element.\r\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\r\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\r\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\r\n   * Get the size of the icon (in pixels).\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\r\n   * @return {string|undefined} Image src.\r\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\r\n   * Load not yet loaded URI.\r\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */this.image_.src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_).then(image => {\n        this.image_ = image;\n        this.handleImageLoad_();\n      }).catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @private\r\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio] || this.imageState_ !== ImageState.LOADED) {\n      return;\n    }\n    const image = this.image_;\n    const ctx = createCanvasContext2D(Math.ceil(image.width * pixelRatio), Math.ceil(image.height * pixelRatio));\n    const canvas = ctx.canvas;\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\r\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\r\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise(resolve => {\n        if (this.imageState_ === ImageState.LOADED || this.imageState_ === ImageState.ERROR) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (this.imageState_ === ImageState.LOADED || this.imageState_ === ImageState.ERROR) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\r\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\r\n * @param {string|undefined} cacheKey Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\r\n * @param {import(\"../color.js\").Color|string|null} color Color.\r\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\r\n * @return {IconImage} Icon image.\r\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage = cacheKey === undefined ? undefined : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, image && 'src' in image ? image.src || undefined : cacheKey, crossOrigin, imageState, color);\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (pattern && iconImage && !iconImageCache.getPattern(cacheKey, crossOrigin, color)) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\nexport default IconImage;", "/**\r\n * @module ol/style/Image\r\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n\n/**\r\n * @typedef {Object} Options\r\n * @property {number} opacity Opacity.\r\n * @property {boolean} rotateWithView If the image should get rotated with the view.\r\n * @property {number} rotation Rotation.\r\n * @property {number|import(\"../size.js\").Size} scale Scale.\r\n * @property {Array<number>} displacement Displacement.\r\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\r\n */\n\n/**\r\n * @classdesc\r\n * A base class used for creating subclasses and not instantiated in\r\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\r\n * {@link module:ol/style/RegularShape~RegularShape}.\r\n * @abstract\r\n * @api\r\n */\nclass ImageStyle {\n  /**\r\n   * @param {Options} options Options.\r\n   */\n  constructor(options) {\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.opacity_ = options.opacity;\n\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.rotation_ = options.rotation;\n\n    /**\r\n     * @private\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\n    this.scale_ = options.scale;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\n    this.displacement_ = options.displacement;\n\n    /**\r\n     * @private\r\n     * @type {import('../style/Style.js').DeclutterMode}\r\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\r\n   * Clones the style.\r\n   * @return {ImageStyle} The cloned style.\r\n   * @api\r\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode()\n    });\n  }\n\n  /**\r\n   * Get the symbolizer opacity.\r\n   * @return {number} Opacity.\r\n   * @api\r\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\r\n   * Determine whether the symbolizer rotates with the map.\r\n   * @return {boolean} Rotate with map.\r\n   * @api\r\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\r\n   * Get the symoblizer rotation.\r\n   * @return {number} Rotation.\r\n   * @api\r\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\r\n   * Get the symbolizer scale.\r\n   * @return {number|import(\"../size.js\").Size} Scale.\r\n   * @api\r\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\r\n   * Get the symbolizer scale array.\r\n   * @return {import(\"../size.js\").Size} Scale array.\r\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\r\n   * Get the displacement of the shape\r\n   * @return {Array<number>} Shape's center displacement\r\n   * @api\r\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\r\n   * Get the declutter mode of the shape\r\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\r\n   * @api\r\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Anchor.\r\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\r\n   * Get the image element for the symbolizer.\r\n   * @abstract\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {import('../DataTile.js').ImageLike} Image element.\r\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\r\n   * @abstract\r\n   * @return {import('../DataTile.js').ImageLike} Image element.\r\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\r\n   * Get the image pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Pixel ratio.\r\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\r\n   * @abstract\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Origin.\r\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\r\n   * Get the size of the symbolizer (in pixels).\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Size.\r\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\r\n   * Set the displacement.\r\n   *\r\n   * @param {Array<number>} displacement Displacement.\r\n   * @api\r\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\r\n   * Set the opacity.\r\n   *\r\n   * @param {number} opacity Opacity.\r\n   * @api\r\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\r\n   * Set whether to rotate the style with the view.\r\n   *\r\n   * @param {boolean} rotateWithView Rotate with map.\r\n   * @api\r\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\r\n   * Set the rotation.\r\n   *\r\n   * @param {number} rotation Rotation.\r\n   * @api\r\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\r\n   * Set the scale.\r\n   *\r\n   * @param {number|import(\"../size.js\").Size} scale Scale.\r\n   * @api\r\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\r\n   * @abstract\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\r\n   * Load not yet loaded URI.\r\n   * @abstract\r\n   */\n  load() {\n    abstract();\n  }\n\n  /**\r\n   * @abstract\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\r\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\r\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\nexport default ImageStyle;"],
  "mappings": "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",
  "names": []
}
